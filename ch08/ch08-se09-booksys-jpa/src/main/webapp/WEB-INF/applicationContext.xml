<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    
    <!-- 定义数据源bean，使用C3P0作为实现，并注入数据源的必要信息 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close"
        p:driverClass="com.mysql.jdbc.Driver"
        p:jdbcUrl="jdbc:mysql://localhost:3306/crazyjee"
        p:user="root"
        p:password="123456"
        p:maxPoolSize="10"
        p:minPoolSize="3"
        p:initialPoolSize="3"
        p:maxIdleTime="30" />
    <!-- 定义JPA中的EntityManagerFactoryBean，使用LocalContainerEntityManagerFactoryBean作为实现。并注入所需的数据源dataSource -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="database" value="MYSQL" />
            </bean>
        </property>
    </bean>
    
    <!-- 该Bean后处理器组件会告诉Spring处理Dao组件中的 @PersistenceContext　注解 -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
    <!-- 定义Service组件，并将DAO组件注入Service组件中 -->
    <bean id="bookService" class="ch08.se08.booksys.service.impl.BookServiceImpl"
        p:bookDao-ref="bookDao" />
    <bean id="bookDao" class="ch08.se08.booksys.dao.impl.BookDaoJpaImpl" />
    
    <!-- 配置针对JPA的局部事务管理器，并注入entityManagerFactory -->
    <bean id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="emf" />
    
    <!-- 根据 @Transactional 注解来生成事务代理，并注入transactionManager
        这种方式比直接配置tx:advice和aop要简单得多。推荐使用JPA! -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
